---
# tasks file for roles/lxd-make
- name: create containers
  # get all host names from inventory
  loop: "{{ groups['containers'] }}"
  # use lxd_container module from ansible to create containers
  lxd_container:
    url: https://192.168.56.100:8443
    cert_file: "/home/sinister/snap/lxd/current/.config/lxc/client.crt"
    key_file: "/home/sinister/snap/lxd/current/.config/lxc/client.key"
    trust_password: LXDrulez
    # container name is the hostname
    name: "{{ item }}"
    state: started
    source:
          type: image
          mode: pull
          server: https://images.linuxcontainers.org
          protocol: "simplestreams"
          alias: "centos/7/amd64"
          architecture: "x86_64"
    devices:
    # configure network interface
          eth0:
            type: nic
            nictype: bridged
            parent: lxdbr0
            # get ip address from inventory
            ipv4.address: "{{ hostvars[item].ip_address }}"
          fwdport22:
            connect: tcp:localhost:22
            listen: "{{ hostvars[item].tcp_port22 }}"
            type: proxy
          fwdport80:
            connect: tcp:localhost:80
            listen: "{{ hostvars[item].tcp_port80 }}"
            type: proxy

- name: create container with hdd
  lxd_container:
    url: https://192.168.56.100:8443
    cert_file: "/home/sinister/snap/lxd/current/.config/lxc/client.crt"
    key_file: "/home/sinister/snap/lxd/current/.config/lxc/client.key"
    trust_password: LXDrulez
    name: "c4"
    state: started
    source:
          type: image
          mode: pull
          server: https://images.linuxcontainers.org
          protocol: "simplestreams"
          alias: "centos/7/amd64"
          architecture: "x86_64"
    devices:
    # configure network interface
          eth0:
            type: nic
            nictype: bridged
            parent: lxdbr0
            # get ip address from inventory
            ipv4.address: "10.204.58.114"
          fwdport22:
            connect: tcp:localhost:22
            listen: "tcp:0.0.0.0:2204"
            type: proxy
          fwdport80:
            connect: tcp:localhost:9090
            listen: "tcp:0.0.0.0:9090"
            type: proxy
          crash-disk:
            path: /mnt/vars
            source: /dev/loop9
            type: disk


