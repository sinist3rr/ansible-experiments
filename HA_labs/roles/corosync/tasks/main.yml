---
# tasks file for roles/corosync

- name: Check if cluster consist of at least 2 nodes
  fail:
    msg: 'Cluster must have at least 2 members'
  when: play_hosts|count() < 2
  run_once: true

- name: Install cluster packages to all nodes
  yum:
    name: "{{ corosync_packages }}"
    state: 'installed'

- name: Create cluster system group
  group:
    name: "{{ cluster_group }}"
    state: 'present'

- name: Create cluster system user
  user:
    name: "{{ cluster_user }}"
    state: 'present'
    password: "{{ cluster_user_pass | password_hash('sha512', ansible_hostname|replace('-','x')|truncate(16, True, '', 0)) }}"
    groups: "{{ cluster_group }}"
    comment: 'HA Cluster Administrator'

- name: Enable and start PCSD service
  service:
    name: 'pcsd'
    enabled: true
    state: 'started'

- name: Authorize cluster nodes
  pcs_auth:
    node_name: "{{ hostvars[item]['ansible_fqdn'].split('.')[0] }}"
    username: "{{ cluster_user }}"
    password: "{{ cluster_user_pass }}"
  with_items: "{{ play_hosts }}"

- name: Setup cluster
  pcs_cluster:
    node_list: "{% for item in play_hosts %}{{ hostvars[item]['ansible_hostname'] }} {% endfor %}"
    cluster_name: "{{ cluster_name }}"
    transport: "{{ cluster_transport }}"
    allowed_node_changes: "{% if allow_cluster_expansion|bool %}add{% else %}none{% endif %}"
  run_once: true

- name: Start cluster services on all nodes
  service:
    name: "{{ item }}"
    state: 'started'
  with_items:
    - pacemaker
    - corosync

- name: Enable cluster services on boot
  service:
    name: "{{ item }}"
    enabled: true
  when: cluster_enable_service|bool
  with_items:
    - pacemaker
    - corosync

- name: check that firewalld is running
  shell: service firewalld status warn=false
  register: _svc_firewalld
  failed_when: _svc_firewalld.rc != 0 and ("unrecognized service" not in _svc_firewalld.stderr)
  ignore_errors: true

- name: firewalld ports for Pacemaker/Corosync
  firewalld:
    service: high-availability
    permanent: true
    immediate: true
    state: enabled
  when: "_svc_firewalld.rc == 0"

